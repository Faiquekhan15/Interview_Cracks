**Problem: Seating Students**

You are given an array representing the arrangement of seats in a classroom. Each seat can either be empty (denoted as `0`) or occupied (denoted as `1`). Students need to be seated in such a way that they are socially distanced from each other. A student can sit in any seat that is socially distanced from other students.

A seat is considered socially distanced if no other student sits directly adjacent to it, either in the same row or diagonally. Diagonal adjacency means sitting in a position that forms a diagonal line with the current seat.

Write a function `SeatingStudents(arr)` that takes an array `arr` as input. The array represents the classroom arrangement, where `arr[i]` represents the i-th row of seats. Each element of the array can be `0` (empty seat) or `1` (occupied seat). Your task is to find the maximum number of students that can be seated in the classroom while ensuring they are socially distanced.

Your function should return an integer representing the maximum number of students that can be seated with social distancing.

**Function Signature:**
```js
function SeatingStudents(arr) {
    // Your code here
}
```

**Input:**
- An array `arr` of length `n` representing the classroom arrangement. (1 ≤ n ≤ 20)
- Each element `arr[i]` is either `0` or `1`.

**Output:**
- An integer representing the maximum number of students that can be seated with social distancing.

**Example:**
```js
console.log(SeatingStudents([0, 1, 0, 0, 0, 1, 0]));  // Output: 4
```

In the given example, the optimal seating arrangement is `[0, 1, 0, 0, 0, 1, 0]`. Students can be seated in the first, third, fourth, and sixth seats, satisfying the social distancing requirement.

---

Feel free to adapt the problem statement as needed for your context, and make sure to provide clear instructions to the participants on how the seating arrangement should be optimized to achieve the maximum number of students while adhering to the social distancing rules.